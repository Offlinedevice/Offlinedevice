
Intro 
-----------------------------
The Offline device is a tool for generating and managing encryption keys, setting up a Yubikey 5 NFC (hardware device) and storing files and folders securely using encryption. It is built using standard components and the plastic casing can be printed with a common 3D-printer. The offline device must never be connected to the Internet. All transfers of data to and from the device are done using USB-sticks or scanning QR-codes on the screen. The offline device can: 
* Generate and use encryption keys (encryption/decryption, authentication, signing of keys and documents, etc).
* Work as a password manager and backup for account login details, Bitcoin seed words etc.
* Managing external security key such as the Yubikey 5C NFC (initializing, changing settings, transferring subkeys etc).
* Store a secure archive that is encrypted on the device and also stored on a USB stick. It can be restored from the USB-backup.
* Issuing and managing digital ID’s.
* Generate and store Nostr private and public keys
* Transfer Nostr keys to a Nostr Signing Device (NSD)
* Receive and store secure copies of Bolt cards (load address, reset address and programming keys).
* Generate and store BTC wallet addresses (offline cold storage).
* Store details of Passkeys.
* Encrypt/decrypt messages/texts and check signatures etc.
* Sign public encryption keys and files.


General use:

1. Create an account on the device and generate one or more external encryption key(s). Or import your existing keys to the Offline Device.
Tip: Choose strong passwords. Especially for keys used with Yubikey as there is no need to remember/use them. The Yubikey uses only a PIN to perform cryptographic operations (three failed attempts locks the Yubikey).

2. Store bitcoin wallets, sensitive data, Bolt cards and passwords etc in the secure archive.

3. Make one or more backups on USB-sticks (this includes making a backup for the secret key to decrypt the Offline device itself).
Tip: Store the USB- backups on multiple physical locations for safety. Don't store both the backupand, encryption key and the secret password with the same person. That would make that person responsible for safe keeping in a way that he/she is probably not able to handle.

4. Export public keys and secret subkeys to files and transfer them to online computers and/or smartphones (for encrypting emails etc).

5. Make a backup whenever important data is added or modified. Or if a new secret encryption key is created.

Never leave the room while logged in to your account. Stealing information is done in a split second and it's more or less impossible to prove who did it.


Data security 
-----------------------------
Keeping data, and bitcoin, in self-custody is a much more secure then trusting a central authority and hoping you can get to it when needed or in case of an emergency. It's like having a ton of gold but you can only access it if somebody else unlocks the vault door. Is that gold really yours then!?!
Encryption is the most efficient and safe way of securing ones data. The important part is that it has to be YOU that generate the encryption keys. And that you do it in a secure and private way (offline). 
Encryption keys that can be generated with the offline device include FIDO2 passwordsless authentication keys, bitcoin wallets addresses, SSH-communication keys, encryption/decryption keys and signing keys. These keys uses encryption that can't be broken no matter how much resources the attacker has.
For the average individual the threat of data being stolen comes from an online attacker. So keeping the encryption (master) keys offline is very important. You can make a backup and give it to a friend or relative for safe keeping, BUT don't give the same person the secret password. That you give to somebody else for safe keeping. That way the risks are reduced.
If the Offline device (the hardware) can be manipulated (without you knowing a spyware or keylogger etc could be installed) so, it's best to store the device locked in a safe and/or hide it.

Get started
-----------------------------
First connect a screen using a mini-HDMI connector. The screen resolution should be minimum 1920 x 1080 (HD). Secondly connect a keyboard and mouse. If using a Raspberry PI keyboard and mouse the key layout and language will automatically be configured. And after the screen and keybord are connected finally connect the power cord (its the micro-USB connector at far end. The power supply shall be rated at minimum 2 A output. It is a good idea to use a cord with an in-line switch when connecting the power supply. 
The offline device has a built-in hardware clock (with battery). This allows it to keep the date and time, even if it's not connected to a power supply for long periods. But it is necessary to first set the time and date. Go to the settings page by clicking on the "Settings"- button at the top right corner. Under "Settings" it is also possible to set the background, button colors and avatar etc (if logged in to an account).
On the main page there is a button called "Start". This will give two options. One option is to make a new acount and the other to make an account with an additional key for external communication (in addition to the key used for encrypting/decrypting the offline device itself). Selecting this option will let you configure and load subkeys to an Yubikey 5 (if you have one). 

The option for creating an account is limited to only creating a key for encrypting the offline device itself (maybe you already have a key that you use for emails etc. Or, you like to generate it some other time or way).


Using the offline device
-----------------------------
When the setup process is complete and you have a user account you can start adding some files, passwords/wallets, Bolt cards or generate Bitcoin wallets etc. After you're done, simply hit “Close and exit” at the bottom of the screen. This will encrypt all the data before shutting down the device. After keys have been added/modified on the local keychain it's important to “Backup keys” from the GPG menu. It is important to regularly do a backup to one or more USB devices. This can be done with “Backup to USB/SD” under the secure archive menu. It is also possible to clone the entire offline device to an extra microSD-card under the same menu (but only when the secure archive is encrypted). There is a risk that the offline device will get tampered with if somebody gets physical access to it, so keep it hidden and locked away as much as possible. The secret passphrase should be written down at more than one location. Make sure that somebody you trust has knowledge of it in case something happens to you..
Make sure to never leave the device on and unattended with the secure archive decrypted. 
There can be many accounts on an offline device. When logging in select the correct key/avatar to access your user account. To clone the device you will need an extra microSD-card (min. 32 gb) and a USB-to-microSD adaptor.
Under the Settings-menu it's possible to set the date and time and also to customize your account (theme, colors and user name).
The encrypted information on the device is "hacker proof" once the a user logs out (and it's encrypted). Also, any backups are secure (as the encryption can't be broken, if the password is strong enough..). But make sure that the device itself can't be accessed by an attacker. 


Specifications
-----------------------------
Offline device parts list:

    • Raspberry PI case (can be printed from files using 3D printer) 
    • Raspberry PI zero 2 W (with male headers 2,54 mm for RTC-board, pin 1-9)
    • RTC (Real Time Clock), DS1307
    • Lithium battery, CR1220 3V 
    • MicroSD 64 gb (min 32 gb)

Software:

    • Raspberry PI Debian 64 bit operating system
    • CUPS, Common UNIX Printing System (optional)


Building a offline device from scratch 
-----------------------------
Install a legacy 64-bit Raspberry Pi OS (that works with Raspberry Pi 2 W) with desktop support on the microSD card. Set user and password to "user1".

Set time zone during download process.

Start the offline device and connect to the Internet through Wifi.

Set locale by opening settings and selecting "Localisation Options" -> "L1 Locale" (spacebar to select -> "sv_SE.UTF-8 UTF-8", for Swedish) and press enter.

Change keyboard layout to Generic PC-105, Svenskt -> Svenskt (or other). This will work automatically if you use a PI official keyboard and mouse.

Update the system.
sudo update 

Overclock the device (optional)
sudo nano /boot/config.txt. Change the line in the file to "arm_freq=1200" and add at the bottom of the file "over_voltage=2". Save and exit.

Restart the device.
sudo reboot

Enable, install and check the RTC (Real Time Clock a with battery needs to be mounted to the Raspberry Pi)
sudo nano /boot/config.txt

Un-comment (removing the "#"-sign) and change/add
dtparam=i2c_arm=on
dtoverlay=i2c-rtc,ds1307

Install the i2c tool (for hardware clock)
sudo apt-get install i2c-tools

Change system clock to run on added hardware clock
sudo apt-get remove --purge fake-hwclock
sudo update-rc.d -f fake-hwclock remove
#sudo systemctl disable fake-hwclock

Remove conflicting information in library
sudo nano /lib/udev/hwclock-set and comment out these lines (with #-sign):

#if [ -e /run/systemd/system ] ; then
# exit 0
#fi
#/sbin/hwclock --rtc=$dev --systz

Reboot the device.
sudo reboot

Sync the RTC with PI
sudo hwclock -w
Check that the hardware clock has been synced
sudo hwclock -r (if not synced RETRY command "sudo hwclock -w")

Install drivers for Smart card reader, Omnikey 5022 (optional)
sudo apt install libccid #libpcsclite pcsc-tools opensc #libsystemd #libusb #libpcsc

Place the following pictures in folder /home/user1/venvpython/images:
AI_face.JPG
BTC_icon_grey.jpg
lightbackground.jpg
blackbackground.jpg
BTC_icon_orange.jpg
lightbackgroundmid.jpg
black.jpg
darkbackground.jpg
login.png
bluebackground.jpg
darkbackgroundmid.jpg
logout.png
blue.jpg
DemoID.JPG
summerbackground.jpg
bluewaves.jpg
GnuPGbackground.JPG
summerbackgroundmid.jpg
boltcardbackground.JPG
iconlockedold.png
winterbackground.jpg
boltcardicon.JPG
iconlocked.png
winterbackgroundmid.jpg
BTC_icon_black.jpg
iconopenold.png
Yubikey5CBackground.JPG
BTC_icon_blue.jpg
iconopen.png
BTC_icon_green.jpg
ID_map.png
vectorIDart.jpg

And in folder /home/user1/Pictures:
AI_boy.png
AI_man.png
blue.jpg
user_anon.png
AI_face.JPG
AI_woman.png
female_anon_ID.JPG
user_skull.png
AI_girl.png
bitcoin_bkg_.jpg
male_anon_ID.JPG
user_yinyang.png

Create a virtual environment for python3:
sudo apt install python3-venv
python3 -m venv venvpython
source venvpython/bin/activate
pip install customtkinter gnupg python-yubico libusb pyusb pillow pyscreenshot pywallet nostr

Copy the file GUIApp.py to the folder /home/user1/venvpython

Edit autostart in order to get the GUI app to start when powered up.
nano /home/pi/.config/lxsession/LXDE-pi/autostart and add line @lxterminal -e /home/user1/venvpython/python GUIApp.py


